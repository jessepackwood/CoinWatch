// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Container Login should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    createUser={[Function]}
    inputChange={[Function]}
    loginUser={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        undefined,
        <div
          className="login-form"
>
          <Link
                    replace={false}
                    to="/home"
          >
                    <h1
                              className="app-title login-title"
                    >
                              Coin Watch
                    </h1>
          </Link>
          <input
                    className="input-field"
                    name="email"
                    onChange={[Function]}
                    placeholder="Email"
                    type="text"
                    value=""
          />
          <input
                    className="input-field"
                    name="password"
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
                    value=""
          />
          <input
                    className="btn-submit"
                    onClick={[Function]}
                    type="submit"
                    value="Login"
          />
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              replace={false}
              to="/home"
>
              <h1
                            className="app-title login-title"
              >
                            Coin Watch
              </h1>
</Link>,
            <input
              className="input-field"
              name="email"
              onChange={[Function]}
              placeholder="Email"
              type="text"
              value=""
/>,
            <input
              className="input-field"
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
/>,
            false,
            <input
              className="btn-submit"
              onClick={[Function]}
              type="submit"
              value="Login"
/>,
            undefined,
          ],
          "className": "login-form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <h1
                className="app-title login-title"
>
                Coin Watch
</h1>,
              "replace": false,
              "to": "/home",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Coin Watch",
                "className": "app-title login-title",
              },
              "ref": null,
              "rendered": "Coin Watch",
              "type": "h1",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input-field",
              "name": "email",
              "onChange": [Function],
              "placeholder": "Email",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "input-field",
              "name": "password",
              "onChange": [Function],
              "placeholder": "Password",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "btn-submit",
              "onClick": [Function],
              "type": "submit",
              "value": "Login",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          undefined,
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          undefined,
          <div
            className="login-form"
>
            <Link
                        replace={false}
                        to="/home"
            >
                        <h1
                                    className="app-title login-title"
                        >
                                    Coin Watch
                        </h1>
            </Link>
            <input
                        className="input-field"
                        name="email"
                        onChange={[Function]}
                        placeholder="Email"
                        type="text"
                        value=""
            />
            <input
                        className="input-field"
                        name="password"
                        onChange={[Function]}
                        placeholder="Password"
                        type="password"
                        value=""
            />
            <input
                        className="btn-submit"
                        onClick={[Function]}
                        type="submit"
                        value="Login"
            />
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                replace={false}
                to="/home"
>
                <h1
                                className="app-title login-title"
                >
                                Coin Watch
                </h1>
</Link>,
              <input
                className="input-field"
                name="email"
                onChange={[Function]}
                placeholder="Email"
                type="text"
                value=""
/>,
              <input
                className="input-field"
                name="password"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
/>,
              false,
              <input
                className="btn-submit"
                onClick={[Function]}
                type="submit"
                value="Login"
/>,
              undefined,
            ],
            "className": "login-form",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <h1
                  className="app-title login-title"
>
                  Coin Watch
</h1>,
                "replace": false,
                "to": "/home",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Coin Watch",
                  "className": "app-title login-title",
                },
                "ref": null,
                "rendered": "Coin Watch",
                "type": "h1",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-field",
                "name": "email",
                "onChange": [Function],
                "placeholder": "Email",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "input-field",
                "name": "password",
                "onChange": [Function],
                "placeholder": "Password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "btn-submit",
                "onClick": [Function],
                "type": "submit",
                "value": "Login",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            undefined,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
